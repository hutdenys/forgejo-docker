services:
  db:
    image: mariadb:lts
    env_file:
      - ./.env/db.env
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - forgejo-net  
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"

  forgejo:
    build: ./forgejo
    container_name: forgejo-app
    depends_on:
      - db
    env_file:
      - ./.env/forgejo.env
    ports:
      - "3000:3000"
      - "222:22"
    volumes:
      - forgejo-data:/data
    networks:
      - forgejo-net
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"

  nginx:
    image: nginx:alpine-otel
    container_name: forgejo-nginx
    env_file:
      - ./.env/nginx.env
    ports:
      - "80:80"
    depends_on:
      - forgejo
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/opentelemetry_module.conf:/etc/nginx/conf.d/opentelemetry_module.conf
    networks:
      - forgejo-net
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"

  jenkins:
    image: jenkins/jenkins:alpine
    volumes:
      - jenkins-data:/var/jenkins_home
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - jenkins-net

  agent:
    build: ./agent
    container_name: jenkins-agent
    volumes:
      - agent-data:/home/jenkins/agent
    depends_on:
      - jenkins
    privileged: true
    env_file:
      - ./.env/jenkins.env
    networks:
      - jenkins-net

  splunk:
    image: splunk/splunk:latest
    container_name: splunk
    env_file:
      - ./.env/splunk.env
    ports:
      - "8000:8000"   # UI
      - "8088:8088"   # HEC
    volumes:
      - splunk-etc:/opt/splunk/etc
      - splunk-var:/opt/splunk/var
    networks:
      - forgejo-net
      
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.128.0
    container_name: otel-collector
    env_file:
      - ./.env/otel.env
    user: "0"
    depends_on:
      - splunk
    volumes:
      - ./otel/otel-config.yaml:/etc/otelcol-contrib/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8888:8888"
    restart: always
    networks:
      - forgejo-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"

  sonar:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    volumes:
      - sonar-data:/opt/sonarqube/data
      - sonar-logs:/opt/sonarqube/logs
      - sonar-plugins:/opt/sonarqube/extensions
    networks:
      - jenkins-net

volumes:
  db-data:
  forgejo-data:
  jenkins-data:
  agent-data:
  splunk-etc:
  splunk-var:
  sonar-data:
  sonar-logs:
  sonar-plugins:

networks:
  forgejo-net:
  jenkins-net: